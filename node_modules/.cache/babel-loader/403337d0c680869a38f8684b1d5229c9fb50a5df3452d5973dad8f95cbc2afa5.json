{"ast":null,"code":"var _jsxFileName = \"C:\\\\Devansh\\\\Hackathons\\\\AceHack_4.0\\\\ai_powered_portfolio_builder\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { SendHorizontal } from 'lucide-react';\nimport axios from 'axios';\nimport ChatHistory from './ChatHistory';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [history, setHistory] = useState([]);\n  const [currentChatIndex, setCurrentChatIndex] = useState(0);\n\n  // Load chat history from localStorage\n  useEffect(() => {\n    const storedHistory = JSON.parse(localStorage.getItem('chatSessions')) || [];\n    if (storedHistory.length === 0) {\n      // Create the first chat session if none exists\n      const newChat = {\n        messages: [],\n        timestamp: new Date().toLocaleString(),\n        title: 'New Chat'\n      };\n      localStorage.setItem('chatSessions', JSON.stringify([newChat]));\n      setHistory([newChat]);\n    } else {\n      setHistory(storedHistory);\n      setMessages(storedHistory[0].messages || []);\n    }\n  }, []);\n\n  // Save chat history with title updates\n  useEffect(() => {\n    if (history.length > 0) {\n      const updatedHistory = [...history];\n\n      // Update the current chat with latest messages\n      updatedHistory[currentChatIndex] = {\n        ...updatedHistory[currentChatIndex],\n        messages: messages,\n        timestamp: new Date().toLocaleString(),\n        // If no title exists and there's a first message, use it as title\n        title: updatedHistory[currentChatIndex].title || (messages.length > 0 ? messages[0].text.substring(0, 20) + '...' : 'New Chat')\n      };\n      setHistory(updatedHistory);\n      localStorage.setItem('chatSessions', JSON.stringify(updatedHistory));\n    }\n  }, [messages]);\n\n  // Create a new chat\n  const createNewChat = () => {\n    const newChat = {\n      messages: [],\n      timestamp: new Date().toLocaleString(),\n      title: 'New Chat'\n    };\n    const updatedHistory = [...history, newChat];\n    setHistory(updatedHistory);\n    setMessages([]);\n    setCurrentChatIndex(updatedHistory.length - 1);\n    localStorage.setItem('chatSessions', JSON.stringify(updatedHistory));\n  };\n\n  // Load previous chat\n  const loadChat = index => {\n    setMessages(history[index].messages);\n    setCurrentChatIndex(index);\n  };\n\n  // Process user messages based on content\n  const processUserMessage = text => {\n    // Simple hardcoded responses for specific questions\n    const lowerText = text.toLowerCase();\n    if (lowerText.includes('who are you') || lowerText.includes('who r u')) {\n      return \"I am here to help you build your portfolio!\";\n    } else if (lowerText.includes('hello') || lowerText.includes('hi')) {\n      return \"Hello! I'm your portfolio assistant. How can I help you today?\";\n    } else if (lowerText.includes('thank you') || lowerText.includes('thanks')) {\n      return \"You're welcome! Is there anything else you'd like help with?\";\n    } else {\n      return null; // No hardcoded response, will use API\n    }\n  };\n  const handleSend = async () => {\n    if (input.trim()) {\n      const userMessage = {\n        text: input,\n        sender: 'user'\n      };\n      const newMessages = [...messages, userMessage];\n      setMessages(newMessages);\n      setInput('');\n      setLoading(true);\n\n      // Check for hardcoded responses first\n      const hardcodedResponse = processUserMessage(input);\n      if (hardcodedResponse) {\n        // Use the hardcoded response without calling the API\n        setTimeout(() => {\n          setMessages(prev => [...prev, {\n            text: hardcodedResponse,\n            sender: 'ai'\n          }]);\n          setLoading(false);\n        }, 500); // Small delay to simulate processing\n      } else {\n        // No hardcoded response, call the API\n        try {\n          var _response$data, _response$data$candid, _response$data$candid2, _response$data$candid3, _response$data$candid4, _response$data$candid5;\n          const response = await axios.post('https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro:generateContent', {\n            contents: [{\n              parts: [{\n                text: input\n              }]\n            }],\n            systemInformation: \"You are a portfolio builder AI. You will help the user create a portfolio based on their input.\"\n          }, {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            params: {\n              key: 'AIzaSyDIcfjdJCcFXJhBry1aX8OgW3zP_Pr4cZg'\n            }\n          });\n          const aiResponse = (response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$candid = _response$data.candidates) === null || _response$data$candid === void 0 ? void 0 : (_response$data$candid2 = _response$data$candid[0]) === null || _response$data$candid2 === void 0 ? void 0 : (_response$data$candid3 = _response$data$candid2.content) === null || _response$data$candid3 === void 0 ? void 0 : (_response$data$candid4 = _response$data$candid3.parts) === null || _response$data$candid4 === void 0 ? void 0 : (_response$data$candid5 = _response$data$candid4[0]) === null || _response$data$candid5 === void 0 ? void 0 : _response$data$candid5.text) || 'No response';\n          setMessages(prev => [...prev, {\n            text: aiResponse,\n            sender: 'ai'\n          }]);\n        } catch (error) {\n          console.error('Error:', error);\n          setMessages(prev => [...prev, {\n            text: 'Failed to generate portfolio. Please try again.',\n            sender: 'ai'\n          }]);\n        } finally {\n          setLoading(false);\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(ChatHistory, {\n      history: history,\n      loadChat: loadChat,\n      createNewChat: createNewChat,\n      currentChatIndex: currentChatIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 bg-gradient-to-br from-purple-950 to-purple-800 flex flex-col justify-between text-white p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 w-full overflow-y-auto p-4 mb-4\",\n        children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-purple-300 mt-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold mb-2\",\n            children: \"Portfolio Builder Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"How can I help you create your portfolio today?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mb-4 text-lg ${msg.sender === 'user' ? 'text-right' : 'text-left'}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `${msg.sender === 'user' ? 'bg-purple-700' : 'bg-purple-800'} p-3 rounded-xl inline-block max-w-3xl`,\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-8 h-8 border-4 border-white border-t-transparent rounded-full animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center w-full p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"flex-1 p-3 border rounded-xl outline-none bg-purple-950 text-white placeholder-gray-400\",\n          type: \"text\",\n          placeholder: \"Describe your portfolio...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && handleSend()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          className: \"ml-3 bg-purple-700 hover:bg-purple-600 text-white p-3 rounded-xl transition-colors\",\n          children: /*#__PURE__*/_jsxDEV(SendHorizontal, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"+0COC5EGG+l7ahF7mVwnGDfrTNQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SendHorizontal","axios","ChatHistory","jsxDEV","_jsxDEV","App","_s","input","setInput","messages","setMessages","loading","setLoading","history","setHistory","currentChatIndex","setCurrentChatIndex","storedHistory","JSON","parse","localStorage","getItem","length","newChat","timestamp","Date","toLocaleString","title","setItem","stringify","updatedHistory","text","substring","createNewChat","loadChat","index","processUserMessage","lowerText","toLowerCase","includes","handleSend","trim","userMessage","sender","newMessages","hardcodedResponse","setTimeout","prev","_response$data","_response$data$candid","_response$data$candid2","_response$data$candid3","_response$data$candid4","_response$data$candid5","response","post","contents","parts","systemInformation","headers","params","key","aiResponse","data","candidates","content","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","type","placeholder","value","onChange","e","target","onKeyDown","onClick","size","_c","$RefreshReg$"],"sources":["C:/Devansh/Hackathons/AceHack_4.0/ai_powered_portfolio_builder/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { SendHorizontal } from 'lucide-react';\nimport axios from 'axios';\nimport ChatHistory from './ChatHistory';\n\nconst App = () => {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [history, setHistory] = useState([]);\n  const [currentChatIndex, setCurrentChatIndex] = useState(0);\n\n  // Load chat history from localStorage\n  useEffect(() => {\n    const storedHistory = JSON.parse(localStorage.getItem('chatSessions')) || [];\n    \n    if (storedHistory.length === 0) {\n      // Create the first chat session if none exists\n      const newChat = { \n        messages: [], \n        timestamp: new Date().toLocaleString(),\n        title: 'New Chat' \n      };\n      localStorage.setItem('chatSessions', JSON.stringify([newChat]));\n      setHistory([newChat]);\n    } else {\n      setHistory(storedHistory);\n      setMessages(storedHistory[0].messages || []);\n    }\n  }, []);\n\n  // Save chat history with title updates\n  useEffect(() => {\n    if (history.length > 0) {\n      const updatedHistory = [...history];\n      \n      // Update the current chat with latest messages\n      updatedHistory[currentChatIndex] = {\n        ...updatedHistory[currentChatIndex],\n        messages: messages,\n        timestamp: new Date().toLocaleString(),\n        // If no title exists and there's a first message, use it as title\n        title: updatedHistory[currentChatIndex].title || \n               (messages.length > 0 ? messages[0].text.substring(0, 20) + '...' : 'New Chat')\n      };\n      \n      setHistory(updatedHistory);\n      localStorage.setItem('chatSessions', JSON.stringify(updatedHistory));\n    }\n  }, [messages]);\n\n  // Create a new chat\n  const createNewChat = () => {\n    const newChat = { \n      messages: [], \n      timestamp: new Date().toLocaleString(),\n      title: 'New Chat'\n    };\n    const updatedHistory = [...history, newChat];\n    setHistory(updatedHistory);\n    setMessages([]);\n    setCurrentChatIndex(updatedHistory.length - 1);\n    localStorage.setItem('chatSessions', JSON.stringify(updatedHistory));\n  };\n\n  // Load previous chat\n  const loadChat = (index) => {\n    setMessages(history[index].messages);\n    setCurrentChatIndex(index);\n  };\n\n  // Process user messages based on content\n  const processUserMessage = (text) => {\n    // Simple hardcoded responses for specific questions\n    const lowerText = text.toLowerCase();\n    \n    if (lowerText.includes('who are you') || lowerText.includes('who r u')) {\n      return \"I am here to help you build your portfolio!\";\n    } else if (lowerText.includes('hello') || lowerText.includes('hi')) {\n      return \"Hello! I'm your portfolio assistant. How can I help you today?\";\n    } else if (lowerText.includes('thank you') || lowerText.includes('thanks')) {\n      return \"You're welcome! Is there anything else you'd like help with?\";\n    } else {\n      return null; // No hardcoded response, will use API\n    }\n  };\n\n  const handleSend = async () => {\n    if (input.trim()) {\n      const userMessage = { text: input, sender: 'user' };\n      const newMessages = [...messages, userMessage];\n      setMessages(newMessages);\n      setInput('');\n      setLoading(true);\n\n      // Check for hardcoded responses first\n      const hardcodedResponse = processUserMessage(input);\n\n      if (hardcodedResponse) {\n        // Use the hardcoded response without calling the API\n        setTimeout(() => {\n          setMessages((prev) => [...prev, { text: hardcodedResponse, sender: 'ai' }]);\n          setLoading(false);\n        }, 500); // Small delay to simulate processing\n      } else {\n        // No hardcoded response, call the API\n        try {\n          const response = await axios.post(\n            'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro:generateContent',\n            {\n              contents: [{ parts: [{ text: input }] }],\n              systemInformation: \"You are a portfolio builder AI. You will help the user create a portfolio based on their input.\",\n            },\n            {\n              headers: { 'Content-Type': 'application/json' },\n              params: { key: 'AIzaSyDIcfjdJCcFXJhBry1aX8OgW3zP_Pr4cZg' }\n            }\n          );\n\n          const aiResponse = response?.data?.candidates?.[0]?.content?.parts?.[0]?.text || 'No response';\n          setMessages((prev) => [...prev, { text: aiResponse, sender: 'ai' }]);\n        } catch (error) {\n          console.error('Error:', error);\n          setMessages((prev) => [...prev, { text: 'Failed to generate portfolio. Please try again.', sender: 'ai' }]);\n        } finally {\n          setLoading(false);\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"flex min-h-screen\">\n      {/* Chat History Sidebar */}\n      <ChatHistory \n        history={history} \n        loadChat={loadChat} \n        createNewChat={createNewChat}\n        currentChatIndex={currentChatIndex} \n      />\n\n      {/* Chat Interface */}\n      <div className=\"flex-1 bg-gradient-to-br from-purple-950 to-purple-800 flex flex-col justify-between text-white p-6\">\n        <div className=\"flex-1 w-full overflow-y-auto p-4 mb-4\">\n          {messages.length === 0 && (\n            <div className=\"text-center text-purple-300 mt-10\">\n              <h2 className=\"text-2xl font-bold mb-2\">Portfolio Builder Assistant</h2>\n              <p>How can I help you create your portfolio today?</p>\n            </div>\n          )}\n          \n          {messages.map((msg, index) => (\n            <div key={index} className={`mb-4 text-lg ${msg.sender === 'user' ? 'text-right' : 'text-left'}`}>\n              <span className={`${msg.sender === 'user' ? 'bg-purple-700' : 'bg-purple-800'} p-3 rounded-xl inline-block max-w-3xl`}>\n                {msg.text}\n              </span>\n            </div>\n          ))}\n          \n          {loading && (\n            <div className=\"flex justify-center mt-4\">\n              <div className=\"w-8 h-8 border-4 border-white border-t-transparent rounded-full animate-spin\"></div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"flex items-center w-full p-4\">\n          <input \n            className=\"flex-1 p-3 border rounded-xl outline-none bg-purple-950 text-white placeholder-gray-400\"\n            type=\"text\"\n            placeholder=\"Describe your portfolio...\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n          />\n          <button \n            onClick={handleSend} \n            className=\"ml-3 bg-purple-700 hover:bg-purple-600 text-white p-3 rounded-xl transition-colors\"\n          >\n            <SendHorizontal size={20} />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}