{"ast":null,"code":"var _jsxFileName = \"C:\\\\Devansh\\\\Hackathons\\\\AceHack_4.0\\\\ai_powered_portfolio_builder\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { SendHorizontal } from 'lucide-react';\nimport axios from 'axios';\nimport ChatHistory from './ChatHistory';\nimport ReactMarkdown from 'react-markdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [history, setHistory] = useState([]);\n\n  // Load chat history from localStorage\n  useEffect(() => {\n    const storedHistory = JSON.parse(localStorage.getItem('chatSessions')) || [];\n    setHistory(storedHistory);\n  }, []);\n\n  // Save chat history\n  useEffect(() => {\n    if (messages.length > 0) {\n      const updatedHistory = [...history];\n      updatedHistory[updatedHistory.length - 1] = {\n        messages,\n        timestamp: new Date().toLocaleString()\n      };\n      setHistory(updatedHistory);\n      localStorage.setItem('chatSessions', JSON.stringify(updatedHistory));\n    }\n  }, [messages, history]);\n\n  // Create a new chat\n  const createNewChat = () => {\n    setMessages([]);\n    const newChat = {\n      messages: [],\n      timestamp: new Date().toLocaleString()\n    };\n    const updatedHistory = [...history, newChat];\n    setHistory(updatedHistory);\n    localStorage.setItem('chatSessions', JSON.stringify(updatedHistory));\n  };\n\n  // Load previous chat\n  const loadChat = index => {\n    setMessages(history[index].messages);\n  };\n  const handleSend = async () => {\n    if (input.trim()) {\n      const newMessages = [...messages, {\n        text: input,\n        sender: 'user'\n      }];\n      setMessages(newMessages);\n      setInput('');\n      setLoading(true);\n      try {\n        var _response$data, _response$data$candid, _response$data$candid2, _response$data$candid3, _response$data$candid4, _response$data$candid5;\n        const response = await axios.post('https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro:generateContent', {\n          system_instruction: {\n            parts: [{\n              text: 'You are a portfolio builder, which helps beginner-level coders build their portfolio.'\n            }]\n          },\n          contents: [{\n            parts: [{\n              text: input\n            }]\n          }]\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          params: {\n            key: 'AIzaSyDIcfjdJCcFXJhBry1aX8OgW3zP_Pr4cZg'\n          }\n        });\n        const aiResponse = (response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$candid = _response$data.candidates) === null || _response$data$candid === void 0 ? void 0 : (_response$data$candid2 = _response$data$candid[0]) === null || _response$data$candid2 === void 0 ? void 0 : (_response$data$candid3 = _response$data$candid2.content) === null || _response$data$candid3 === void 0 ? void 0 : (_response$data$candid4 = _response$data$candid3.parts) === null || _response$data$candid4 === void 0 ? void 0 : (_response$data$candid5 = _response$data$candid4[0]) === null || _response$data$candid5 === void 0 ? void 0 : _response$data$candid5.text) || 'No response';\n        setMessages(prev => [...prev, {\n          text: aiResponse,\n          sender: 'ai'\n        }]);\n      } catch (error) {\n        console.error('Error:', error);\n        setMessages(prev => [...prev, {\n          text: 'Failed to generate portfolio. Please try again.',\n          sender: 'ai'\n        }]);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(ChatHistory, {\n      history: history,\n      loadChat: loadChat,\n      createNewChat: createNewChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 bg-gradient-to-br from-purple-950 to-purple-800 flex flex-col justify-between text-white p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 w-full overflow-y-auto p-4\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mb-4 text-lg ${msg.sender === 'user' ? 'text-right' : 'text-left'}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: msg.sender === 'user' ? 'bg-purple-700 p-3 rounded-xl inline-block' : 'bg-purple-800 p-3 rounded-xl inline-block',\n            children: msg.sender === 'ai' ? /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 40\n            }, this) : msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-8 h-8 border-4 border-white border-t-transparent rounded-full animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center w-full p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"flex-1 p-3 border rounded-xl outline-none bg-purple-950 text-white placeholder-gray-400\",\n          type: \"text\",\n          placeholder: \"Describe your portfolio...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && handleSend()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          className: \"ml-3 bg-purple-700 text-white p-3 rounded-xl\",\n          children: /*#__PURE__*/_jsxDEV(SendHorizontal, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mMk7NSkeu8o21lOOmcpG8uzLmNM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SendHorizontal","axios","ChatHistory","ReactMarkdown","jsxDEV","_jsxDEV","App","_s","input","setInput","messages","setMessages","loading","setLoading","history","setHistory","storedHistory","JSON","parse","localStorage","getItem","length","updatedHistory","timestamp","Date","toLocaleString","setItem","stringify","createNewChat","newChat","loadChat","index","handleSend","trim","newMessages","text","sender","_response$data","_response$data$candid","_response$data$candid2","_response$data$candid3","_response$data$candid4","_response$data$candid5","response","post","system_instruction","parts","contents","headers","params","key","aiResponse","data","candidates","content","prev","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","type","placeholder","value","onChange","e","target","onKeyDown","onClick","size","_c","$RefreshReg$"],"sources":["C:/Devansh/Hackathons/AceHack_4.0/ai_powered_portfolio_builder/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { SendHorizontal } from 'lucide-react';\nimport axios from 'axios';\nimport ChatHistory from './ChatHistory';\nimport ReactMarkdown from 'react-markdown';\n\nconst App = () => {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [history, setHistory] = useState([]);\n\n  // Load chat history from localStorage\n  useEffect(() => {\n    const storedHistory = JSON.parse(localStorage.getItem('chatSessions')) || [];\n    setHistory(storedHistory);\n  }, []);\n\n  // Save chat history\n  useEffect(() => {\n    if (messages.length > 0) {\n      const updatedHistory = [...history];\n      updatedHistory[updatedHistory.length - 1] = { messages, timestamp: new Date().toLocaleString() };\n      setHistory(updatedHistory);\n      localStorage.setItem('chatSessions', JSON.stringify(updatedHistory));\n    }\n  }, [messages, history]);\n\n  // Create a new chat\n  const createNewChat = () => {\n    setMessages([]);\n    const newChat = { messages: [], timestamp: new Date().toLocaleString() };\n    const updatedHistory = [...history, newChat];\n    setHistory(updatedHistory);\n    localStorage.setItem('chatSessions', JSON.stringify(updatedHistory));\n  };\n\n  // Load previous chat\n  const loadChat = (index) => {\n    setMessages(history[index].messages);\n  };\n\n  const handleSend = async () => {\n    if (input.trim()) {\n      const newMessages = [...messages, { text: input, sender: 'user' }];\n      setMessages(newMessages);\n      setInput('');\n      setLoading(true);\n\n      try {\n        const response = await axios.post(\n          'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro:generateContent',\n          {\n            system_instruction: {\n              parts: [{ text: 'You are a portfolio builder, which helps beginner-level coders build their portfolio.' }],\n            },\n            contents: [{ parts: [{ text: input }] }],\n          },\n          {\n            headers: { 'Content-Type': 'application/json' },\n            params: { key: 'AIzaSyDIcfjdJCcFXJhBry1aX8OgW3zP_Pr4cZg' },\n          }\n        );\n\n        const aiResponse = response?.data?.candidates?.[0]?.content?.parts?.[0]?.text || 'No response';\n        setMessages((prev) => [...prev, { text: aiResponse, sender: 'ai' }]);\n      } catch (error) {\n        console.error('Error:', error);\n        setMessages((prev) => [...prev, { text: 'Failed to generate portfolio. Please try again.', sender: 'ai' }]);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"flex min-h-screen\">\n      {/* Chat History Sidebar */}\n      <ChatHistory history={history} loadChat={loadChat} createNewChat={createNewChat} />\n\n      {/* Chat Interface */}\n      <div className=\"flex-1 bg-gradient-to-br from-purple-950 to-purple-800 flex flex-col justify-between text-white p-6\">\n        <div className=\"flex-1 w-full overflow-y-auto p-4\">\n          {messages.map((msg, index) => (\n            <div key={index} className={`mb-4 text-lg ${msg.sender === 'user' ? 'text-right' : 'text-left'}`}>\n              <span className={msg.sender === 'user' ? 'bg-purple-700 p-3 rounded-xl inline-block' : 'bg-purple-800 p-3 rounded-xl inline-block'}>\n                {msg.sender === 'ai' ? <ReactMarkdown>{msg.text}</ReactMarkdown> : msg.text}\n              </span>\n            </div>\n          ))}\n          {loading && (\n            <div className=\"flex justify-center mt-4\">\n              <div className=\"w-8 h-8 border-4 border-white border-t-transparent rounded-full animate-spin\"></div>\n            </div>\n          )}\n        </div>\n\n        {/* Input Section */}\n        <div className=\"flex items-center w-full p-4\">\n          <input\n            className=\"flex-1 p-3 border rounded-xl outline-none bg-purple-950 text-white placeholder-gray-400\"\n            type=\"text\"\n            placeholder=\"Describe your portfolio...\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyDown={(e) => e.key === 'Enter' && handleSend()}\n          />\n          <button onClick={handleSend} className=\"ml-3 bg-purple-700 text-white p-3 rounded-xl\">\n            <SendHorizontal size={20} />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}